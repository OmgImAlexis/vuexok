(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{364:function(e,t,r){"use strict";r.r(t);var o=r(42),s=Object(o.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"calling-actions-from-a-worker"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#calling-actions-from-a-worker"}},[e._v("#")]),e._v(" Calling actions from a worker")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://developer.mozilla.org/en/docs/DOM/Using_web_workers",target:"_blank",rel:"noopener noreferrer"}},[e._v("Workers"),r("OutboundLink")],1),e._v(" are used to optimize the main thread. In a worker, you can perform complex calculations that could lead to drawdowns in the main thread. And then you need to transfer the result of calculations to the main thread. If you use vuex, then most often you will need to transfer the results of calculating workers to the storage.")]),e._v(" "),r("p",[e._v("It's very easy to do this with Vuexok. Vuexok allows you to proxy action methods into workers.")]),e._v(" "),r("h2",{attrs:{id:"improvement-of-worker-initialization"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#improvement-of-worker-initialization"}},[e._v("#")]),e._v(" Improvement of worker initialization")]),e._v(" "),r("p",[e._v("After initializing the worker, you need to pass it to the "),r("code",[e._v("vuexokWorkerWrapper")]),e._v(" method")]),e._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("import")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" vuexokWorkerWrapper "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("from")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v("'vuexok/dist/vuexokWorkerWrapper'")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" worker "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Worker")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[e._v("'./worker'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("vuexokWorkerWrapper")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("worker"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])]),r("p",[e._v("That being said, you can also use "),r("a",{attrs:{href:"https://github.com/GoogleChromeLabs/comlink",target:"_blank",rel:"noopener noreferrer"}},[e._v("comlink"),r("OutboundLink")],1),e._v(" with vuexok.")]),e._v(" "),r("h2",{attrs:{id:"improvement-of-the-worker"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#improvement-of-the-worker"}},[e._v("#")]),e._v(" Improvement of the worker")]),e._v(" "),r("p",[e._v("Now let's move on to the worker code. In order for the actions of the module to be available in the worker, 3 lines are enough.\nIn the worker code, import the "),r("code",[e._v("vuexokWorkerGetActions")]),e._v(" method, which will return methods for calling the module's actions.")]),e._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("import")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" vuexokWorkerGetActions "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("from")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v("'vuexok/dist/vuexokWorkerGetActions'")]),e._v("\n")])])]),r("p",[e._v("The worker does not know anything about our store and modules, so we need to import the module type into the worker.")]),e._v(" "),r("p",[e._v("Since we do not want vuex and the code of our module in the worker, we only import the type of the module. Typescript versions higher than "),r("a",{attrs:{href:"https://devblogs.microsoft.com/typescript/announcing-typescript-3-8-beta/",target:"_blank",rel:"noopener noreferrer"}},[e._v("3.8"),r("OutboundLink")],1),e._v(" only allow importing of the type.")]),e._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("import")]),e._v(" type "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("countModule"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("from")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v("'@/store/modules/countModule'")]),e._v("\n")])])]),r("p",[e._v("Now we can access the actions of our module from the worker. The "),r("code",[e._v("vuexokWorkerGetActions")]),e._v(" method takes one required parameter - the path to the vuex module.")]),e._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" countModuleActions "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" vuexokWorkerGetActions"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("typeof")]),e._v(" countModule"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[e._v("'countModule'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])]),r("p",[e._v("Simple example (20 seconds)\n"),r("video",{staticStyle:{width:"100% !important",height:"auto!important"},attrs:{width:"560",height:"240",controls:""}},[r("source",{attrs:{src:"/vuexok/video/createWorker.mp4",type:"video/mp4"}}),e._v("\nYour browser does not support the video tag.\n")])]),e._v(" "),r("h2",{attrs:{id:"action-error-handling"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#action-error-handling"}},[e._v("#")]),e._v(" Action error handling")]),e._v(" "),r("p",[e._v("For interaction between the worker and the main thread, the "),r("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage",target:"_blank",rel:"noopener noreferrer"}},[e._v("postMessage"),r("OutboundLink")],1),e._v(" method is used.")]),e._v(" "),r("p",[r("code",[e._v("postMessage")]),e._v(" uses "),r("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm",target:"_blank",rel:"noopener noreferrer"}},[e._v("the structured cloning algorithm"),r("OutboundLink")],1),e._v(".\nImplementation in ff does not "),r("a",{attrs:{href:"https://bugzilla.mozilla.org/show_bug.cgi?id=1556604",target:"_blank",rel:"noopener noreferrer"}},[e._v("support passing native errors objects"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("p",[e._v("For this original error object, vuexok passes the "),r("code",[e._v("message")]),e._v(" field of the "),r("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",target:"_blank",rel:"noopener noreferrer"}},[e._v("Error"),r("OutboundLink")],1),e._v(" object to the worker, and a new instance of"),r("code",[e._v("new Error (message)")]),e._v("is created inside the worker.")])])}),[],!1,null,null,null);t.default=s.exports}}]);